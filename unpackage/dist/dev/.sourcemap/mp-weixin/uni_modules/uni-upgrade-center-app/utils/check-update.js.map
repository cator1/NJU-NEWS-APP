{"version":3,"file":"check-update.js","sources":["uni_modules/uni-upgrade-center-app/utils/check-update.ts"],"sourcesContent":["import callCheckVersion, { UniUpgradeCenterResult } from \"./call-check-version\"\nimport { platform_iOS } from './utils'\n// #ifdef UNI-APP-X\nimport { openSchema } from '@/uni_modules/uts-openSchema'\n// #endif\n\n// 推荐再App.vue中使用\nconst PACKAGE_INFO_KEY = '__package_info__'\n// #ifdef APP-HARMONY\nexport default function (component?: any) : Promise<UniUpgradeCenterResult> {\n// #endif\n// #ifndef APP-HARMONY\nexport default function () : Promise<UniUpgradeCenterResult> {\n// #endif\n\treturn new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n\t\tcallCheckVersion().then(async (uniUpgradeCenterResult) => {\n\t\t\t// NOTE uni-app x 3.96 解构有问题\n\t\t\tconst code = uniUpgradeCenterResult.code\n\t\t\tconst message = uniUpgradeCenterResult.message\n\t\t\tconst url = uniUpgradeCenterResult.url // 安装包下载地址\n        // 此处逻辑仅为示例，可自行编写\n        if (code > 0) {\n          // 腾讯云获取下载链接\n          if (/^cloud:\\/\\//.test(url)) {\n              const tcbRes = await uniCloud.getTempFileURL({ fileList: [url] });\n              if (typeof tcbRes.fileList[0].tempFileURL !== 'undefined') uniUpgradeCenterResult.url = tcbRes.fileList[0].tempFileURL;\n          }\n\n          /**\n           * 提示升级一\n           * 使用 uni.showModal\n           */\n          // return updateUseModal(uniUpgradeCenterResult)\n\n          // #ifndef UNI-APP-X\n          // 静默更新，只有wgt有\n          if (uniUpgradeCenterResult.is_silently) {\n            uni.downloadFile({\n              url,\n              success: res => {\n                if (res.statusCode == 200) {\n                  // 下载好直接安装，下次启动生效\n                  plus.runtime.install(res.tempFilePath, {\n                    force: false\n                  });\n                }\n              }\n            });\n            return;\n          }\n          // #endif\n\n          /**\n           * 提示升级二\n           * 官方适配的升级弹窗，可自行替换资源适配UI风格\n           */\n          // #ifndef UNI-APP-X\n          // #ifdef APP-PLUS\n          uni.setStorageSync(PACKAGE_INFO_KEY, uniUpgradeCenterResult)\n          uni.navigateTo({\n            url: `/uni_modules/uni-upgrade-center-app/pages/upgrade-popup?local_storage_key=${PACKAGE_INFO_KEY}`,\n            fail: (err) => {\n              console.error('更新弹框跳转失败', err)\n              uni.removeStorageSync(PACKAGE_INFO_KEY)\n            }\n          })\n          // #endif\n          // #ifdef APP-HARMONY\n          if (component) {\n            component.show(true, uniUpgradeCenterResult)\n          } else {\n            reject({\n              code: -1,\n              message: '在 HarmonyOS Next 平台请传递组件使用'\n            })\n          }\n          // #endif\n          // #endif\n          // #ifdef UNI-APP-X\n          uni.setStorageSync(PACKAGE_INFO_KEY, uniUpgradeCenterResult)\n          uni.openDialogPage({\n            url: `/uni_modules/uni-upgrade-center-app/pages/uni-app-x/upgrade-popup?local_storage_key=${PACKAGE_INFO_KEY}`,\n            disableEscBack: true,\n            fail: (err) => {\n              console.error('更新弹框跳转失败', err)\n              uni.removeStorageSync(PACKAGE_INFO_KEY)\n            }\n          })\n          // #endif\n\n          return resolve(uniUpgradeCenterResult)\n        } else if (code < 0) {\n          console.error(message)\n          return reject(uniUpgradeCenterResult)\n        }\n        return resolve(uniUpgradeCenterResult)\n      }).catch((err) => {\n        reject(err)\n      })\n    });\n  }\n\n/**\n * 使用 uni.showModal 升级\n */\nfunction updateUseModal(packageInfo : UniUpgradeCenterResult) : void {\n\t// #ifdef APP\n\tconst {\n\t\ttitle, // 标题\n\t\tcontents, // 升级内容\n\t\tis_mandatory, // 是否强制更新\n\t\turl, // 安装包下载地址\n\t\ttype,\n\t\tplatform\n\t} = packageInfo;\n\n\tlet isWGT = type === 'wgt'\n\tlet isiOS = !isWGT ? platform.includes(platform_iOS) : false;\n\n\t// #ifndef UNI-APP-X\n\tlet confirmText = isiOS ? '立即跳转更新' : '立即下载更新'\n\t// #endif\n\t// #ifdef UNI-APP-X\n\tlet confirmText = '立即下载更新'\n\t// #endif\n\n    return uni.showModal({\n      title,\n      content: contents,\n      showCancel: !is_mandatory,\n      confirmText,\n      success: res => {\n        if (res.cancel) return;\n\n\t\t\tif (isiOS) {\n\t\t\t\t// iOS 平台跳转 AppStore\n\t\t\t\t// #ifndef UNI-APP-X\n\t\t\t\tplus.runtime.openURL(url);\n\t\t\t\t// #endif\n\t\t\t\t// #ifdef UNI-APP-X\n\t\t\t\topenSchema(url)\n\t\t\t\t// #endif\n\t\t\t\treturn;\n\t\t\t}\n\n        uni.showToast({\n          title: '后台下载中……',\n          duration: 1000\n        });\n\n\t\t\t// wgt 和 安卓下载更新\n\t\t\tuni.downloadFile({\n\t\t\t\turl,\n\t\t\t\tsuccess: res => {\n\t\t\t\t\tif (res.statusCode !== 200) {\n\t\t\t\t\t\tconsole.error('下载安装包失败');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\t// 下载好直接安装，下次启动生效\n          // uni-app x 项目没有 plus5+ 故使用条件编译\n\t\t\t\t\t// #ifndef UNI-APP-X\n\t\t\t\t\tplus.runtime.install(res.tempFilePath, {\n\t\t\t\t\t\tforce: false\n\t\t\t\t\t}, () => {\n\t\t\t\t\t\tif (is_mandatory) {\n\t\t\t\t\t\t\t//更新完重启app\n\t\t\t\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\t\t\t\tplus.runtime.restart();\n\t\t\t\t\t\t\t// #endif\n\t\t\t\t\t\t\t// #ifdef APP-HARMONY\n\t\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\t\ttitle: '安装成功',\n\t\t\t\t\t\t\t\tcontent: '请手动重启应用',\n\t\t\t\t\t\t\t\tshowCancel: false,\n\t\t\t\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\t\t\t\tplus.runtime.quit();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// #endif\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '安装成功是否重启？',\n\t\t\t\t\t\t\tsuccess: res => {\n\t\t\t\t\t\t\t\tif (res.confirm) {\n\t\t\t\t\t\t\t\t\t//更新完重启app\n\t\t\t\t\t\t\t\t\t// #ifdef APP-PLUS\n\t\t\t\t\t\t\t\t\tplus.runtime.restart();\n\t\t\t\t\t\t\t\t\t// #endif\n\t\t\t\t\t\t\t\t\t// #ifdef APP-HARMONY\n\t\t\t\t\t\t\t\t\tplus.runtime.quit();\n\t\t\t\t\t\t\t\t\t// #endif\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}, err => {\n\t\t\t\t\t\tuni.showModal({\n\t\t\t\t\t\t\ttitle: '更新失败',\n\t\t\t\t\t\t\tcontent: err\n\t\t\t\t\t\t\t\t.message,\n\t\t\t\t\t\t\tshowCancel: false\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t\t// #endif\n\n          // #ifdef UNI-APP-X\n          uni.installApk({\n          \tfilePath: res.tempFilePath,\n          \tsuccess: () => {\n          \t\tuni.showModal({\n          \t\t\ttitle: '安装成功请手动重启'\n          \t\t});\n          \t},\n          \tfail: err => {\n          \t\tuni.showModal({\n          \t\t\ttitle: '更新失败',\n          \t\t\tcontent: err.errMsg,\n          \t\t\tshowCancel: false\n          \t\t});\n          \t}\n          });\n          // #endif\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\t// #endif\n}\n"],"names":["callCheckVersion","uniCloud","uni"],"mappings":";;;AAY6D,SAAA,cAAA;AAE5D,SAAO,IAAI,QAAgC,CAAC,SAAS,WAAW;AAC9CA,4EAAA,EAAE,KAAK,OAAO,2BAA2B;AAEzD,YAAM,OAAO,uBAAuB;AACpC,YAAM,UAAU,uBAAuB;AACvC,YAAM,MAAM,uBAAuB;AAE9B,UAAI,OAAO,GAAG;AAER,YAAA,cAAc,KAAK,GAAG,GAAG;AACnB,gBAAA,SAAS,MAAMC,cAAAA,GAAS,eAAe,EAAE,UAAU,CAAC,GAAG,EAAA,CAAG;AAChE,cAAI,OAAO,OAAO,SAAS,CAAC,EAAE,gBAAgB;AAAa,mCAAuB,MAAM,OAAO,SAAS,CAAC,EAAE;AAAA,QAC/G;AAUA,YAAI,uBAAuB,aAAa;AACtCC,wBAAAA,MAAI,aAAa;AAAA,YACf;AAAA,YACA,SAAS,CAAO,QAAA;AACV,kBAAA,IAAI,cAAc,KAAK;AAEpB,qBAAA,QAAQ,QAAQ,IAAI,cAAc;AAAA,kBACrC,OAAO;AAAA,gBAAA,CACR;AAAA,cACH;AAAA,YACF;AAAA,UAAA,CACD;AACD;AAAA,QACF;AAyCA,eAAO,QAAQ,sBAAsB;AAAA,MAAA,WAC5B,OAAO,GAAG;AACnBA,sBAAAA,MAAA,MAAA,SAAA,kEAAc,OAAO;AACrB,eAAO,OAAO,sBAAsB;AAAA,MACtC;AACA,aAAO,QAAQ,sBAAsB;AAAA,IAAA,CACtC,EAAE,MAAM,CAAC,QAAQ;AAChB,aAAO,GAAG;AAAA,IAAA,CACX;AAAA,EAAA,CACF;AACH;;"}