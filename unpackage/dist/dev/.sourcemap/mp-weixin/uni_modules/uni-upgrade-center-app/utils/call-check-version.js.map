{"version":3,"file":"call-check-version.js","sources":["uni_modules/uni-upgrade-center-app/utils/call-check-version.ts"],"sourcesContent":["export type StoreListItem = {\n\tenable : boolean\n\tid : string\n\tname : string\n\tscheme : string\n\tpriority : number // 优先级\n}\n\nexport type UniUpgradeCenterResult = {\n\t_id : string\n\tappid : string\n\tname : string\n\ttitle : string\n\tcontents : string\n\turl : string // 安装包下载地址\n\tplatform : Array<string> // Array<'Android' | 'iOS' | 'Harmony'>\n\tversion : string // 版本号 1.0.0\n\tuni_platform : string // \"android\" | \"ios\" | 'harmony'\n\tstable_publish : boolean // 是否是稳定版\n\tis_mandatory : boolean // 是否强制更新\n\tis_silently : boolean | null\t// 是否静默更新\n\tcreate_env : string // \"upgrade-center\"\n\tcreate_date : number\n\tmessage : string\n\tcode : number\n\n\ttype : string // \"native_app\" | \"wgt\"\n\tstore_list : StoreListItem[] | null\n\tmin_uni_version : string | null  // 升级 wgt 的最低 uni-app 版本\n}\n\nexport default function () : Promise<UniUpgradeCenterResult> {\n\t// #ifdef APP\n\treturn new Promise<UniUpgradeCenterResult>((resolve, reject) => {\n\t\tconst systemInfo = uni.getSystemInfoSync()\n\t\tconst appId = systemInfo.appId\n\t\tconst appVersion = systemInfo.appVersion //systemInfo.appVersion\n\t\t// #ifndef UNI-APP-X\n\t\tif (typeof appId === 'string' && typeof appVersion === 'string' && appId.length > 0 && appVersion.length > 0) {\n\t\t\tplus.runtime.getProperty(appId, function (widgetInfo) {\n\t\t\t\tif (widgetInfo.version) {\n\t\t\t\t\tlet data = {\n\t\t\t\t\t\taction: 'checkVersion',\n\t\t\t\t\t\tappid: appId,\n\t\t\t\t\t\tappVersion: appVersion,\n\t\t\t\t\t\twgtVersion: widgetInfo.version\n\t\t\t\t\t}\n\t\t\t\t\tuniCloud.callFunction({\n\t\t\t\t\t\tname: 'uni-upgrade-center',\n\t\t\t\t\t\tdata,\n\t\t\t\t\t\tsuccess: (e) => {\n\t\t\t\t\t\t\tresolve(e.result as UniUpgradeCenterResult)\n\t\t\t\t\t\t},\n\t\t\t\t\t\tfail: (error) => {\n\t\t\t\t\t\t\treject(error)\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t} else {\n\t\t\t\t\treject('widgetInfo.version is EMPTY')\n\t\t\t\t}\n\t\t\t})\n\t\t} else {\n\t\t\treject('plus.runtime.appid is EMPTY')\n\t\t}\n\t\t// #endif\n\t\t// #ifdef UNI-APP-X\n\t\tif (typeof appId === 'string' && typeof appVersion === 'string' && appId.length > 0 && appVersion.length > 0) {\n\t\t\tlet data = {\n\t\t\t\taction: 'checkVersion',\n\t\t\t\tappid: appId,\n\t\t\t\tappVersion: appVersion,\n\t\t\t\tis_uniapp_x: true,\n\t\t\t\twgtVersion: '0.0.0.0.0.1'\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tuniCloud.callFunction({\n\t\t\t\t\tname: 'uni-upgrade-center',\n\t\t\t\t\tdata: data\n\t\t\t\t}).then(res => {\n\t\t\t\t\tconst code = res.result['code']\n\t\t\t\t\tconst codeIsNumber = ['Int', 'Long', 'number'].includes(typeof code)\n\t\t\t\t\tif (codeIsNumber) {\n\t\t\t\t\t  if ((code as number) == 0) {\n\t\t\t\t\t    reject({\n\t\t\t\t\t      code: res.result['code'],\n\t\t\t\t\t      message: res.result['message']\n\t\t\t\t\t    })\n\t\t\t\t\t  } else if ((code as number) < 0) {\n\t\t\t\t\t    reject({\n\t\t\t\t\t      code: res.result['code'],\n\t\t\t\t\t      message: res.result['message']\n\t\t\t\t\t    })\n\t\t\t\t\t  } else {\n              const result = JSON.parse<UniUpgradeCenterResult>(JSON.stringify(res.result)) as UniUpgradeCenterResult\n              resolve(result)\n            }\n\t\t\t\t\t}\n\t\t\t\t}).catch<void>((err : any | null) => {\n\t\t\t\t\tconst error = err as UniCloudError\n\t\t\t\t\tif (error.errMsg == '未匹配到云函数[uni-upgrade-center]')\n\t\t\t\t\t\terror.errMsg = '【uni-upgrade-center-app】未配置uni-upgrade-center，无法升级。参考: https://uniapp.dcloud.net.cn/uniCloud/upgrade-center.html'\n\t\t\t\t\treject(error.errMsg)\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\treject(e.message)\n\t\t\t}\n\t\t} else {\n\t\t\treject('invalid appid or appVersion')\n\t\t}\n\t\t// #endif\n\t})\n\t// #endif\n\t// #ifndef APP\n\treturn new Promise((resolve, reject) => {\n\t\treject({\n\t\t\tmessage: '请在App中使用'\n\t\t})\n\t})\n\t// #endif\n}\n"],"names":[],"mappings":";AA+B6D,SAAA,mBAAA;AAkF5D,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AAChC,WAAA;AAAA,MACN,SAAS;AAAA,IAAA,CACT;AAAA,EAAA,CACD;AAEF;;"}